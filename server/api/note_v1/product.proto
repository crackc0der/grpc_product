syntax = "proto3";

package server;

option go_package = "github.com/crackc0der/test_grpc";

service Product {
    rpc GetProduct(ProductRequest) returns (ProductMessage);
    rpc GetAllProducts(AllProductRequest) returns (AllProductMessage);
    rpc AddProduct(ProductMessage) returns (ProductMessage);
    rpc UpdateProduct(ProductMessage) returns (ProductMessage);
    rpc DeleteProduct(ProductRequest) returns (ProductMessage);

    rpc GetCategory(CategoryRequest) returns (CategoryMessage);
    rpc GetAllCategories(AllCategoryRequest) returns (AllCategoryMessage);
    rpc AddCategory(CategoryMessage) returns (CategoryMessage);
    rpc UpdateCategory(CategoryMessage) returns (CategoryMessage);
    rpc DeleteCategory(CategoryRequest) returns (CategoryMessage);
}

message ProductMessage {
    int64 Id = 1;
    string ProductName = 2;
    float ProductPrice = 3;
    int64 ProductCount = 4;
}

message AllProductMessage {
    repeated ProductMessage Products = 1;
}

message ProductRequest {
    int64 Id = 1;
}

message AllProductRequest {
}

message CategoryMessage {
    int64 Id = 1;
    string CategoryName = 2;
}

message CategoryRequest {
    int64 Id = 1;
}

message AllCategoryRequest {
}

message AllCategoryMessage {
    repeated CategoryMessage Categories = 1;
}